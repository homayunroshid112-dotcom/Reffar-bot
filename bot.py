import telebot
from telebot import types
import os

# ==============================
# ЁЯФР Bot Configuration
# ==============================

# ржЖржкржирж╛рж░ BotFather ржерзЗржХрзЗ ржкрж╛ржУрзЯрж╛ ржЯрзЛржХрзЗржи (Render-ржП "Environment Variables" рж╣рж┐рж╕рзЗржмрзЗ рж╕рзЗржЯ ржХрж░рж╛ ржнрж╛рж▓рзЛ)
TOKEN = os.getenv("BOT_TOKEN", "your_bot_token_here")
ADMIN_ID = int(os.getenv("ADMIN_ID", "123456789"))

bot = telebot.TeleBot(TOKEN, parse_mode="HTML")

# ==============================
# тЪб Bot Handlers
# ==============================

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup(row_width=2)

    signup_button = types.InlineKeyboardButton(
        "тЬЕ Signup & Earn",
        url="https://www.revenuecpmgate.com/ntmaiyqqv?key=c170e6d189f42ac05b9ea6fdec5fcbaf"
    )
    support_button = types.InlineKeyboardButton(
        "ЁЯУв Support Channel",
        url="https://t.me/Sapurt_channel_1"
    )
    youtube_button = types.InlineKeyboardButton(
        "тЦ╢я╕П YouTube",
        url="https://youtube.com/@HSOfficialsChannel"
    )
    refer_button = types.InlineKeyboardButton("ЁЯСе My_Refar", callback_data="refer")
    wallet_button = types.InlineKeyboardButton("ЁЯТ╝ My Wallet", callback_data="wallet")
    withdraw_button = types.InlineKeyboardButton("ЁЯТ╡ Withdraw", callback_data="withdraw")

    markup.add(signup_button)
    markup.add(support_button, youtube_button)
    markup.add(refer_button)
    markup.add(wallet_button, withdraw_button)

    bot.send_message(
        message.chat.id,
        (
            "ЁЯСЛ рж╕рзНржмрж╛ржЧрждржо!\n\n"
            "ржЖржкржирж┐ ржПржЦрж╛ржи ржерзЗржХрзЗ рж░рзЗржлрж╛рж░ ржХрж░рзЗ ржЗржиржХрж╛ржо ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ ржкрзНрж░ржержорзЗ Signup ржХрж░рзБржи, "
            "рждрж╛рж░ржкрж░ YouTube рж╕рж╛ржмрж╕рзНржХрзНрж░рж╛ржЗржм ржХрж░рзБржи ржПржмржВ Support Channel ржП ржЬрзЯрзЗржи рж╣рзЛржиред"
        ),
        reply_markup=markup
    )


# ==============================
# ЁЯФЧ Callback Handlers
# ==============================

@bot.callback_query_handler(func=lambda call: call.data == "refer")
def refer(call):
    bot.answer_callback_query(call.id)
    ref_link = f"https://t.me/YourBotName?start={call.from_user.id}"
    bot.send_message(call.message.chat.id,
        f"рззржЯрж╛ рж░рзЗржлрж╛рж░ ржХрж░рж▓рзЗ ржкрж╛ржмрзЗржи рззрзжрзж ржЯрж╛ржХрж╛ред "
        f"рззрзл ржЯрж╛ рж░рзЗржлрж╛рж░ ржХрж░рж╛ ржкрж░ ржЯрж╛ржХрж╛ ржЙрждрзНрждрзЛрж▓ржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред\n\n"
        f"ЁЯФЧ ржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржЩрзНржХ:\n{ref_link}"
    )

@bot.callback_query_handler(func=lambda call: call.data == "wallet")
def wallet(call):
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "ЁЯТ╝ ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕: 0.00рз│")

@bot.callback_query_handler(func=lambda call: call.data == "withdraw")
def withdraw(call):
    bot.answer_callback_query(call.id)
    bot.send_message(
        call.message.chat.id,
        "ЁЯТ╡ Withdraw ржПрж░ ржЬржирзНржп ржХржоржкржХрзНрж╖рзЗ 1500рз│ ржерж╛ржХрждрзЗ рж╣ржмрзЗред\n\nрж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ ржЕрзНржпрж╛ржбржорж┐ржиржХрзЗ ржкрж╛ржарж╛ржирзЛ рж╣ржмрзЗред"
    )
    bot.send_message(
        ADMIN_ID,
        f"ЁЯУв New Withdraw Request\n\nUser: {call.from_user.first_name}\nUser ID: {call.from_user.id}"
    )

# ==============================
# ЁЯЪА Run the bot (Render friendly)
# ==============================

if __name__ == "__main__":
    print("ЁЯдЦ Bot is running on Render...")
    bot.infinity_polling(timeout=10, long_polling_timeout=5)
